import React, { useState } from "react";
import { Card } from "../ui/card";
import { Button } from "../ui/button";
import { Badge } from "../ui/badge";
import { GTSStyles } from "../../utils/gts-styles";
import { 
  ArrowLeft,
  ArrowRight,
  Users,
  Calendar,
  DollarSign,
  CheckCircle,
  Target,
  Building
} from "lucide-react";

interface GTSPrototypeDemoProps {
  onBackToHome: () => void;
}

interface DemoStep {
  id: string;
  title: string;
  description: string;
  module: string;
  icon: React.ComponentType<{ className?: string }>;
  action: string;
  result: string;
}

const demoSteps: DemoStep[] = [
  {
    id: '1',
    title: '–í—Ö–æ–¥ –∫–∞–∫ –ü–∞—Ä—Ç–Ω—ë—Ä',
    description: '–í—ã–±–∏—Ä–∞–µ–º —Ä–æ–ª—å "–ü–∞—Ä—Ç–Ω—ë—Ä-–∞–≥–µ–Ω—Ç" –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞',
    module: 'Login',
    icon: Users,
    action: '–ù–∞–∂–∞—Ç—å "–í–æ–π—Ç–∏ –∫–∞–∫ –ü–∞—Ä—Ç–Ω—ë—Ä-–∞–≥–µ–Ω—Ç"',
    result: '–ü–µ—Ä–µ—Ö–æ–¥ –≤ Dashboard –ø–∞—Ä—Ç–Ω—ë—Ä–∞'
  },
  {
    id: '2',
    title: '–ü—Ä–æ—Å–º–æ—Ç—Ä Dashboard',
    description: '–í–∏–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: –∫–æ–º–∏—Å—Å–∏–∏, –∞–∫—Ç–∏–≤–Ω—ã–µ –ª–∏–¥—ã, –∫–æ–Ω–≤–µ—Ä—Å–∏—è',
    module: 'Dashboard',
    icon: Building,
    action: '–ü—Ä–æ—Å–º–æ—Ç—Ä KPI –∫–∞—Ä—Ç–æ—á–µ–∫',
    result: '–ê–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø—Ä–æ–¥–∞–∂'
  },
  {
    id: '3',
    title: '–°–æ–∑–¥–∞–Ω–∏–µ –ª–∏–¥–∞ –≤ CRM',
    description: '–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞',
    module: 'CRM',
    icon: Target,
    action: '–ö–Ω–æ–ø–∫–∞ "–ù–æ–≤—ã–π –ª–∏–¥" ‚Üí –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É',
    result: '–õ–∏–¥ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–æ—Ä–æ–Ω–∫—É –ø—Ä–æ–¥–∞–∂'
  },
  {
    id: '4',
    title: '–ü–µ—Ä–µ–≤–æ–¥ –ª–∏–¥–∞ –≤ —Å–¥–µ–ª–∫—É',
    description: '–ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ª–∏–¥–∞ –∏ —Å–æ–∑–¥–∞—ë–º —Å–¥–µ–ª–∫—É',
    module: 'CRM',
    icon: DollarSign,
    action: '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç—å –≤ –∫–æ–ª–æ–Ω–∫—É "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã"',
    result: '–°–¥–µ–ª–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é'
  },
  {
    id: '5',
    title: '–°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è',
    description: '–ò–∑ —Å–¥–µ–ª–∫–∏ —Å–æ–∑–¥–∞—ë–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ',
    module: 'Calendar',
    icon: Calendar,
    action: '–ö–Ω–æ–ø–∫–∞ "–°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"',
    result: '–í—ã–±–æ—Ä –¥–∞—Ç—ã, —Ä–µ—Å—É—Ä—Å–∞ –∏ —ç–∫–∏–ø–∞–∂–∞'
  },
  {
    id: '6',
    title: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –æ–ø–ª–∞—Ç–∞',
    description: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–ø–ª–∞—Ç—É',
    module: 'Finance',
    icon: CheckCircle,
    action: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
    result: '–ö–æ–º–∏—Å—Å–∏—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∞'
  }
];

export function GTSPrototypeDemo({ onBackToHome }: GTSPrototypeDemoProps) {
  const [currentStep, setCurrentStep] = useState(0);
  const [completedSteps, setCompletedSteps] = useState<string[]>([]);

  const handleNextStep = () => {
    if (currentStep < demoSteps.length - 1) {
      setCompletedSteps(prev => [...prev, demoSteps[currentStep].id]);
      setCurrentStep(currentStep + 1);
    }
  };

  const handlePrevStep = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const handleCompleteDemo = () => {
    setCompletedSteps(prev => [...prev, demoSteps[currentStep].id]);
  };

  const isStepCompleted = (stepId: string) => completedSteps.includes(stepId);
  const isCurrentStep = (index: number) => index === currentStep;

  return (
    <div className={`${GTSStyles.layout.page} ${GTSStyles.backgrounds.main}`}>
      {/* Header */}
      <div className={`border-b ${GTSStyles.borders.default} ${GTSStyles.backgrounds.surface} p-6`}>
        <div className="max-w-4xl mx-auto flex items-center justify-between">
          <div className="flex items-center gap-4">
            <Button
              variant="ghost"
              onClick={onBackToHome}
              className={GTSStyles.buttons.ghost}
            >
              <ArrowLeft className="w-4 h-4 mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
            
            <div>
              <h1 className={`text-2xl font-medium ${GTSStyles.text.primary} gts-font-heading`}>
                GTS Prototype Demo
              </h1>
              <p className={`${GTSStyles.text.muted}`}>
                –ü–æ–ª–Ω—ã–π user journey: –æ—Ç –≤—Ö–æ–¥–∞ –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–∏
              </p>
            </div>
          </div>
          
          <div className="text-right">
            <div className={`${GTSStyles.text.primary} font-medium`}>
              –®–∞–≥ {currentStep + 1} –∏–∑ {demoSteps.length}
            </div>
            <div className={`text-sm ${GTSStyles.text.muted}`}>
              –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–≤—è–∑–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª–µ–π
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto p-6">
        {/* Progress Bar */}
        <div className="mb-8">
          <div className="flex justify-between mb-4">
            <span className={`text-sm ${GTSStyles.text.muted}`}>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
            <span className={`text-sm ${GTSStyles.text.primary}`}>
              {Math.round(((currentStep + 1) / demoSteps.length) * 100)}%
            </span>
          </div>
          <div className="w-full bg-[#232428] rounded-full h-2">
            <div 
              className="bg-gradient-to-r from-[#91040C] to-red-600 h-2 rounded-full transition-all duration-500"
              style={{ width: `${((currentStep + 1) / demoSteps.length) * 100}%` }}
            />
          </div>
        </div>

        {/* Steps Timeline */}
        <div className="mb-8">
          <div className="flex flex-wrap gap-2">
            {demoSteps.map((step, index) => {
              const IconComponent = step.icon;
              return (
                <div
                  key={step.id}
                  className={`flex items-center gap-2 px-3 py-2 rounded-lg text-sm ${
                    isCurrentStep(index)
                      ? `${GTSStyles.backgrounds.accent} text-white`
                      : isStepCompleted(step.id)
                      ? 'bg-green-500/20 text-green-400'
                      : `${GTSStyles.backgrounds.card} ${GTSStyles.text.muted}`
                  }`}
                >
                  <IconComponent className="w-4 h-4" />
                  <span>{step.module}</span>
                  {isStepCompleted(step.id) && <CheckCircle className="w-4 h-4" />}
                </div>
              );
            })}
          </div>
        </div>

        {/* Current Step Card */}
        <Card className={`${GTSStyles.cards.surface} mb-8`}>
          <div className="p-8">
            <div className="flex items-start gap-6">
              <div className={`w-16 h-16 rounded-2xl ${GTSStyles.backgrounds.accent} flex items-center justify-center`}>
                {React.createElement(demoSteps[currentStep].icon, { 
                  className: "w-8 h-8 text-white" 
                })}
              </div>
              
              <div className="flex-1">
                <div className="flex items-center gap-3 mb-3">
                  <h2 className={`text-xl font-medium ${GTSStyles.text.primary} gts-font-heading`}>
                    {demoSteps[currentStep].title}
                  </h2>
                  <Badge className="bg-[#91040C]/20 text-[#91040C] border-[#91040C]/30">
                    {demoSteps[currentStep].module}
                  </Badge>
                </div>
                
                <p className={`${GTSStyles.text.muted} mb-6 text-lg`}>
                  {demoSteps[currentStep].description}
                </p>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className={`${GTSStyles.cards.content} p-4`}>
                    <h4 className={`${GTSStyles.text.primary} font-medium mb-2`}>
                      –î–µ–π—Å—Ç–≤–∏–µ
                    </h4>
                    <p className={`text-sm ${GTSStyles.text.muted}`}>
                      {demoSteps[currentStep].action}
                    </p>
                  </div>
                  
                  <div className={`${GTSStyles.cards.content} p-4`}>
                    <h4 className={`${GTSStyles.text.primary} font-medium mb-2`}>
                      –†–µ–∑—É–ª—å—Ç–∞—Ç
                    </h4>
                    <p className={`text-sm ${GTSStyles.text.muted}`}>
                      {demoSteps[currentStep].result}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </Card>

        {/* Demo Mockup */}
        <Card className={`${GTSStyles.cards.surface} mb-8`}>
          <div className="p-6">
            <h3 className={`${GTSStyles.text.primary} font-medium mb-4 gts-font-heading`}>
              –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–¥—É–ª—è: {demoSteps[currentStep].module}
            </h3>
            
            {/* Mock Interface */}
            <div className={`${GTSStyles.backgrounds.main} rounded-lg p-6 border ${GTSStyles.borders.default}`}>
              {currentStep === 0 && (
                <div className="text-center space-y-4">
                  <div className="text-lg text-white">üè¢ Business Partners</div>
                  <div className={`${GTSStyles.cards.content} p-4 inline-block`}>
                    <div className="font-medium text-white mb-2">–ü–∞—Ä—Ç–Ω—ë—Ä-–∞–≥–µ–Ω—Ç</div>
                    <div className="text-sm text-white/60 mb-3">–ü—Ä–æ–¥–∞–∂–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–π</div>
                    <Button className={GTSStyles.buttons.primary}>
                      –í–æ–π—Ç–∏ –∫–∞–∫ –ü–∞—Ä—Ç–Ω—ë—Ä-–∞–≥–µ–Ω—Ç
                    </Button>
                  </div>
                </div>
              )}
              
              {currentStep === 1 && (
                <div className="grid grid-cols-3 gap-4">
                  <div className={`${GTSStyles.cards.content} p-4 text-center`}>
                    <div className="text-xl text-white font-semibold">‚ÇΩ125K</div>
                    <div className="text-sm text-white/60">–ö–æ–º–∏—Å—Å–∏–∏</div>
                  </div>
                  <div className={`${GTSStyles.cards.content} p-4 text-center`}>
                    <div className="text-xl text-white font-semibold">12</div>
                    <div className="text-sm text-white/60">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ª–∏–¥–æ–≤</div>
                  </div>
                  <div className={`${GTSStyles.cards.content} p-4 text-center`}>
                    <div className="text-xl text-white font-semibold">68%</div>
                    <div className="text-sm text-white/60">–ö–æ–Ω–≤–µ—Ä—Å–∏—è</div>
                  </div>
                </div>
              )}
              
              {currentStep === 2 && (
                <div className="space-y-4">
                  <Button className={GTSStyles.buttons.primary}>
                    <Target className="w-4 h-4 mr-2" />
                    –ù–æ–≤—ã–π –ª–∏–¥
                  </Button>
                  <div className={`${GTSStyles.cards.content} p-4`}>
                    <div className="font-medium text-white">–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏–¥–∞</div>
                    <div className="text-sm text-white/60">–ò–º—è, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∏–Ω—Ç–µ—Ä–µ—Å</div>
                  </div>
                </div>
              )}
              
              {currentStep === 3 && (
                <div className="flex gap-4">
                  <div className={`${GTSStyles.cards.content} p-3 min-h-[100px]`}>
                    <div className="text-xs text-white/60 mb-2">–õ–∏–¥—ã</div>
                    <div className="text-white text-sm">–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç</div>
                  </div>
                  <ArrowRight className="text-white/40 mt-8" />
                  <div className={`${GTSStyles.cards.content} p-3 min-h-[100px] bg-[#91040C]/20`}>
                    <div className="text-xs text-white/60 mb-2">–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã</div>
                    <div className="text-white text-sm">–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç</div>
                  </div>
                </div>
              )}
              
              {currentStep === 4 && (
                <div className="text-center space-y-4">
                  <Calendar className="w-12 h-12 text-white/60 mx-auto" />
                  <div className="text-white">–°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</div>
                  <div className="text-sm text-white/60">–í—ã–±–æ—Ä –¥–∞—Ç—ã, —Ä–µ—Å—É—Ä—Å–∞ –∏ —ç–∫–∏–ø–∞–∂–∞</div>
                </div>
              )}
              
              {currentStep === 5 && (
                <div className="flex items-center justify-center gap-4">
                  <CheckCircle className="w-8 h-8 text-green-400" />
                  <div>
                    <div className="text-white font-medium">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</div>
                    <div className="text-sm text-green-400">–ö–æ–º–∏—Å—Å–∏—è +‚ÇΩ15,000 –∑–∞—á–∏—Å–ª–µ–Ω–∞</div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </Card>

        {/* Navigation */}
        <div className="flex items-center justify-between">
          <Button
            variant="outline"
            onClick={handlePrevStep}
            disabled={currentStep === 0}
            className={GTSStyles.buttons.secondary}
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            –ù–∞–∑–∞–¥
          </Button>

          <div className="flex gap-2">
            {demoSteps.map((_, index) => (
              <div
                key={index}
                className={`w-2 h-2 rounded-full ${
                  index <= currentStep ? 'bg-[#91040C]' : 'bg-[#232428]'
                }`}
              />
            ))}
          </div>

          {currentStep < demoSteps.length - 1 ? (
            <Button
              onClick={handleNextStep}
              className={GTSStyles.buttons.primary}
            >
              –î–∞–ª–µ–µ
              <ArrowRight className="w-4 h-4 ml-2" />
            </Button>
          ) : (
            <Button
              onClick={handleCompleteDemo}
              className={GTSStyles.buttons.primary}
            >
              –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–º–æ
              <CheckCircle className="w-4 h-4 ml-2" />
            </Button>
          )}
        </div>

        {/* Summary */}
        {currentStep === demoSteps.length - 1 && (
          <Card className={`${GTSStyles.cards.surface} mt-8`}>
            <div className="p-6">
              <h3 className={`${GTSStyles.text.primary} font-medium mb-4 gts-font-heading`}>
                –ß—Ç–æ –±—ã–ª–æ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className={`${GTSStyles.cards.content} p-4`}>
                  <h4 className={`${GTSStyles.text.primary} font-medium mb-2`}>
                    –°–≤—è–∑–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π
                  </h4>
                  <p className={`text-sm ${GTSStyles.text.muted}`}>
                    CRM ‚Üí Calendar ‚Üí Finance —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –¥–∞–Ω–Ω—ã—Ö
                  </p>
                </div>
                
                <div className={`${GTSStyles.cards.content} p-4`}>
                  <h4 className={`${GTSStyles.text.primary} font-medium mb-2`}>
                    –†–æ–ª–µ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
                  </h4>
                  <p className={`text-sm ${GTSStyles.text.muted}`}>
                    –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
                  </p>
                </div>
                
                <div className={`${GTSStyles.cards.content} p-4`}>
                  <h4 className={`${GTSStyles.text.primary} font-medium mb-2`}>
                    –ï–¥–∏–Ω—ã–π UI/UX
                  </h4>
                  <p className={`text-sm ${GTSStyles.text.muted}`}>
                    –¢—ë–º–Ω–∞—è —Ç–µ–º–∞ –∏ —Ç–æ–∫–µ–Ω—ã –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã
                  </p>
                </div>
              </div>
            </div>
          </Card>
        )}
      </div>
    </div>
  );
}